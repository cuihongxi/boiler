C51 COMPILER V9.00   PRINTF                                                                11/24/2020 19:27:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PRINTF
OBJECT MODULE PLACED IN .\Objects\printf.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE HARD\printf\printf.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HARD\KEYSCA
                    -N;.\HARD\TM1640;.\HARD;.\HARD\UART\STC8;.\HARD\delay;.\HARD\printf;.\HARD\MPU430-SPI;.\HARD\interface;.\HARD\TAST) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\printf.lst) OBJECT(.\Objects\printf.obj)

line level    source

   1          #include "printf.h"
   2          
   3          //double类型转换成ASCII码存到数组中保存正值的函数
   4          //precision 表示小数点后面几位
   5          void DoubletoStringSaveZheng(unsigned char* resultArray0,float dat,unsigned char precision)
   6          {
   7   1                      unsigned char i=0; 
   8   1                      unsigned long power = 0;                //      权
   9   1                      unsigned long dat0 =0;
  10   1                      unsigned long POWER = 1;                //10000权
  11   1                      for(i = 0;i < precision; i++)
  12   1                      {
  13   2                              POWER *= 10;
  14   2                      }       
  15   1                      
  16   1                      if((dat-(float)(unsigned long)dat)>0) 
  17   1                              dat = (dat*POWER + 0.5f)/POWER;//如果是整数就不做0.5的加法
  18   1                              dat0 = dat;
  19   1                              for( power=1;dat0>=10;dat0/=10)  
  20   1                                                              power*=10;  
  21   1                              dat0 = dat;
  22   1                              for(i=0;power>0;power/=10)  
  23   1                              {  
  24   2                                                      resultArray0[i] = '0'+dat0/power;                       
  25   2                                                      dat0%=power;  
  26   2                                                      i++;
  27   2                              }           
  28   1              dat0 = dat;
  29   1              power = 0;
  30   1            //存小数部分              
  31   1                              dat0 = POWER*(dat-dat0);
  32   1                              power = POWER;                  
  33   1                               if(power>=10)
  34   1                               {                                              
  35   2                                       resultArray0[i] = '.';
  36   2                                       i++; 
  37   2                                       power/=10;
  38   2                                              for(;power>0;power/=10)  
  39   2                                              {  
  40   3                                                                      resultArray0[i] = '0'+dat0/power;                                                       
  41   3                                                                      dat0 %= power;  
  42   3                                                                      i++;
  43   3                                              }
  44   2                                              resultArray0[i] = '\0';  //添加结束符
  45   2                                                              
  46   2                               } else
  47   1                               resultArray0[i] = '\0';//添加结束符  
  48   1                               
  49   1      }
  50          
  51          structLenTyp finddat(unsigned char*str)
  52          {
  53   1              structLenTyp LenTyp={0,0};
C51 COMPILER V9.00   PRINTF                                                                11/24/2020 19:27:21 PAGE 2   

  54   1              unsigned char leng=0;
  55   1              while(str[leng] != '%')
  56   1              {
  57   2                      leng++;
  58   2              }
  59   1              LenTyp.length = leng;   
  60   1              leng++;
  61   1              LenTyp.type = str[leng];//获取数据类型
  62   1              
  63   1              return LenTyp;
  64   1      }
  65          
  66          
  67          
  68          void Int2HexStr(unsigned char* buf,unsigned long dat)
  69          {
  70   1              unsigned char dat0[8] = {0};
  71   1              unsigned char i = 0;
  72   1              unsigned char j = 0;
  73   1              char array[] = "0123456789ABCDEF";
  74   1              buf[0] = '0';
  75   1              buf[1] = 'x';
  76   1      
  77   1              
  78   1              while(dat)
  79   1              {
  80   2                      dat0[i] = array[(unsigned char)dat & 0x0f];
  81   2                      dat >>= 4;
  82   2                      i++;
  83   2              }
  84   1              while(i)
  85   1              {
  86   2                      i --;
  87   2                      buf[2+j] = dat0[i];
  88   2                      j++;
  89   2              }
  90   1              buf[2+j] = 0;
  91   1              
  92   1      }
  93          void printf(const char*str,unsigned long int dat)
  94          {
  95   1              char xdata array[11];
  96   1              unsigned char xdata str1[30] = {0};
  97   1              unsigned char xdata str2[30] = {0};
  98   1              unsigned char i,j;
  99   1              structLenTyp strucdat;
 100   1              strucdat = finddat(str);
 101   1              if(strucdat.type == 'd')DoubletoStringSaveZheng(array,(float)dat,0);
 102   1              else if(strucdat.type == 'x') Int2HexStr(array,dat);
 103   1              //UART1_SendOneChar(strucdat.length);  
 104   1              //unsigned longtostr(dat,array);
 105   1              
 106   1              
 107   1              for(i=0;str[strucdat.length+2+i] != 0;i++)
 108   1              {
 109   2                      str1[i] = str[strucdat.length+2+i];
 110   2              }
 111   1      
 112   1              for(i=0;i<strucdat.length;i++)
 113   1              {
 114   2                      str2[i] = str[i];
 115   2              }
C51 COMPILER V9.00   PRINTF                                                                11/24/2020 19:27:21 PAGE 3   

 116   1              
 117   1              for(j=0;array[j]!=0;j++)
 118   1              {
 119   2                      str2[i] = array[j];
 120   2                      i++;
 121   2              }
 122   1              for(j=0;str1[j]!=0;j++)
 123   1              {
 124   2                      str2[i] = str1[j];
 125   2                      i++;
 126   2              }
 127   1              str2[i] = 0;
 128   1              UARTSendStr(str2);
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1690    ----
   CONSTANT SIZE    =     87    ----
   XDATA SIZE       =   ----     141
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
