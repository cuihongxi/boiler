C51 COMPILER V9.00   KEYSCAN                                                               11/24/2020 19:27:20 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Objects\KEYSCAN.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE HARD\KEYSCAN\KEYSCAN.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HARD\KEYS
                    -CAN;.\HARD\TM1640;.\HARD;.\HARD\UART\STC8;.\HARD\delay;.\HARD\printf;.\HARD\MPU430-SPI;.\HARD\interface;.\HARD\TAST) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\KEYSCAN.lst) OBJECT(.\Objects\KEYSCAN.obj)

line level    source

   1          #include "KEYSCAN.H"
   2          #include "printf.h"
   3          #include "delay.h"
   4          u8 IO_KeyState, IO_KeyState1, IO_KeyHoldCnt;    //行列键盘变量
   5          // 端口配置成弱上拉
   6          void Key_GPIO_Init(void)
   7          {
   8   1      }
   9          
  10          
  11          //读端口数据
  12          u16    Read_Valu()
  13          {
  14   1          u16  dat = 0;
  15   1        
  16   1          if(SL1 != 0) dat|=0x0001;
  17   1          if(SL2 != 0) dat|=0x0002;
  18   1          if(SL3 != 0) dat|=0x0004;
  19   1          if(SL4 != 0) dat|=0x0008;
  20   1          if(SL5 != 0) dat|=0x0010;
  21   1      
  22   1          if(SH1 != 0) dat|=0x0100;
  23   1          if(SH2 != 0) dat|=0x0200;
  24   1          if(SH3 != 0) dat|=0x0400;
  25   1          if(SH4 != 0) dat|=0x0800;
  26   1          if(SH5 != 0) dat|=0x1000; 
  27   1          if(SH6 != 0) dat|=0x2000; 
  28   1      
  29   1          return dat;
  30   1      }
  31          
  32          void GPIO_Heng_MOED_SET(keyMOde GPIOMODE)
  33          {
  34   1        if (GPIOMODE == GPIO_MODE_IN)
  35   1        { 
  36   2          SH1 = 1;
  37   2          SH2 = 1;
  38   2          SH3 = 1;
  39   2          SH4 = 1;
  40   2          SH5 = 1;
  41   2          SH6 = 1;
  42   2              _nop_();  // 等待两个时钟
  43   2              _nop_(); 
  44   2        }else
  45   1        {
  46   2          SH1 = 0;
  47   2          SH2 = 0;
  48   2          SH3 = 0;
  49   2          SH4 = 0;
  50   2          SH5 = 0;
  51   2          SH6 = 0;    
  52   2        }
  53   1      }
C51 COMPILER V9.00   KEYSCAN                                                               11/24/2020 19:27:20 PAGE 2   

  54          
  55          void GPIO_Lie_MOED_SET(keyMOde GPIOMODE)
  56          {
  57   1        if (GPIOMODE == GPIO_MODE_IN)
  58   1        {  
  59   2          SL1 = 1;
  60   2          SL2 = 1;
  61   2          SL3 = 1;
  62   2          SL4 = 1;
  63   2          SL5 = 1;
  64   2              _nop_();  // 等待两个时钟
  65   2              _nop_();   
  66   2        }else
  67   1        {
  68   2          SL1 = 0;
  69   2          SL2 = 0;
  70   2          SL3 = 0;
  71   2          SL4 = 0;
  72   2          SL5 = 0;  
  73   2        }  
  74   1      }
  75          
  76          // 判断有没有按键按下
  77          u8 KeyRead()
  78          {
  79   1          GPIO_Heng_MOED_SET(GPIO_MODE_OUT);  //横发 0，高8位， 6
  80   1          GPIO_Lie_MOED_SET(GPIO_MODE_IN);    //列读数,低8位 ， 5
  81   1          if(Read_Valu() != 0X001F)
  82   1          {      
  83   2                      _nop_();  // 等待两个时钟
  84   2                      _nop_(); 
  85   2              if(Read_Valu()!= 0X001F)
  86   2              {
  87   3                              return 1;
  88   3                      }
  89   2              }
  90   1              return 0;
  91   1      }
  92          //检测哪个按键拿下，返回键值
  93          u8  Keyscan()
  94          {
  95   1          u16  KeyPort=0; 
  96   1          GPIO_Heng_MOED_SET(GPIO_MODE_OUT);  //横发 0，高8位， 6
  97   1          GPIO_Lie_MOED_SET(GPIO_MODE_IN);    //列读数,低8位 ， 5
  98   1          if(Read_Valu() != 0X001F)
  99   1          {      
 100   2              KeyPort = Read_Valu();
 101   2      
 102   2              if(KeyPort!= 0X001F)
 103   2              {  
 104   3                GPIO_Heng_MOED_SET(GPIO_MODE_IN);  //横读数
 105   3                GPIO_Lie_MOED_SET(GPIO_MODE_OUT);  //列发0                    
 106   3                switch (KeyPort)
 107   3                {
 108   4                    case 0X000F:                                
 109   4                        KeyPort = Read_Valu();
 110   4                        switch (KeyPort)
 111   4                        {                                                             
 112   5                            case 0x3E00: return(LED_MOD5);     
 113   5                                break;
 114   5                            case 0x3D00: return(LED_MOD10);
 115   5                                break;
C51 COMPILER V9.00   KEYSCAN                                                               11/24/2020 19:27:20 PAGE 3   

 116   5                            case 0x3B00: return(LED_AUX);
 117   5                                break;
 118   5                            case 0x3700: return(LED_START);
 119   5                                break;
 120   5                            case 0x2F00: return(KEY_SETSMG2_DOWN);
 121   5                                break;
 122   5                            case 0x1F00: return(LED_NOWATER);
 123   5                                break;                                        
 124   5                        };
 125   4                        break;
 126   4                    case 0X0017:                                
 127   4                        KeyPort = Read_Valu();        
 128   4                        switch (KeyPort)
 129   4                        {
 130   5                            case 0x3E00: return(LED_MOD4);     
 131   5                                break;
 132   5                            case 0x3D00: return(LED_MOD9);
 133   5                                break;
 134   5                            case 0x3B00: return(LED_PROOF);
 135   5                                break;
 136   5                            case 0x3700: return(LED_P);
 137   5                                break;
 138   5                            case 0x2F00: return(KEY_SETSMG2_UP);
 139   5                                break;
 140   5                            case 0x1F00: return(LED_LED);
 141   5                                break;     
 142   5                        };
 143   4                        break;
 144   4                    case 0X001B:                                
 145   4                        KeyPort = Read_Valu();                          
 146   4                        switch (KeyPort)
 147   4                        {
 148   5                            case 0x3E00: return(LED_MOD3);     
 149   5                                break;
 150   5                            case 0x3D00: return(LED_MOD8);
 151   5                                break;
 152   5                            case 0x3B00: return(KEY_FAN);
 153   5                                break;
 154   5                            case 0x3700: return(LED_STEAM);
 155   5                                break;
 156   5                            case 0x2F00: return(KEY_SETSMG1_DOWN);
 157   5                                break;
 158   5                            case 0x1F00: return(LED_ONOFF);
 159   5                                break;
 160   5                        };
 161   4                        break;
 162   4                    case 0X001D: 
 163   4                        KeyPort = Read_Valu();                          
 164   4                        switch (KeyPort)
 165   4                        {
 166   5                            case 0x3E00: return(LED_MOD2);     
 167   5                                break;
 168   5                            case 0x3D00: return(LED_MOD7);
 169   5                                break;
 170   5                            case 0x3B00: return(LED_MOD12);
 171   5                                break;
 172   5                            case 0x3700: return(LED_MOTO);
 173   5                                break;
 174   5                            case 0x2F00: return(KEY_SETSMG1_UP);
 175   5                                break;
 176   5                            case 0x1F00: return(KEY_SETSMG3_DOWN);
 177   5                                break;
C51 COMPILER V9.00   KEYSCAN                                                               11/24/2020 19:27:20 PAGE 4   

 178   5                        };
 179   4                    break;
 180   4                    case 0X001E: 
 181   4                        KeyPort = Read_Valu();                          
 182   4                        switch (KeyPort)
 183   4                        {
 184   5                            case 0x3E00: return(LED_MOD1);     
 185   5                                break;
 186   5                            case 0x3D00: return(LED_MOD6);
 187   5                                break;
 188   5                            case 0x3B00: return(LED_MOD11);
 189   5                                break;
 190   5                            case 0x3700: return(KEY_F);
 191   5                                break;
 192   5                            case 0x2F00: return(LED_STEAMBOX);
 193   5                                break;
 194   5                            case 0x1F00: return(KEY_SETSMG3_UP);
 195   5                                break;
 196   5                        };
 197   4                    break;
 198   4                }
 199   3                  
 200   3              }
 201   2          }
 202   1          return(KEY_NULL);
 203   1          
 204   1      }
 205          
 206          
 207          
 208          
 209          
 210          
 211          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
